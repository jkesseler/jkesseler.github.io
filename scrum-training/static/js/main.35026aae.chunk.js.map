{"version":3,"sources":["cl-logo.svg","template.js","components/Notes.js","slides/introduction/images/iteraties.png","slides/introduction/welcome.js","slides/introduction/notes/welcome.md","slides/introduction/images/pillars-of-scrum.png","slides/introduction/pillars-of-scrum.js","slides/introduction/notes/pillars-of-scrum.md","slides/introduction/images/scrum-values.png","slides/introduction/scrum-values.js","slides/introduction/notes/scrum-values.md","slides/introduction/images/scrum.png","slides/introduction/scrum-overview.js","slides/introduction/notes/scrum-overview.md","slides/scrum-roles/images/scrum-team.png","slides/scrum-roles/images/scrum-team-right.png","slides/scrum-roles/images/scrum-team-wrong.png","slides/scrum-roles/scrum-team.js","slides/scrum-roles/notes/scrum-team.md","slides/scrum-roles/notes/scrum-team-hierachy.md","slides/scrum-roles/notes/scrum-team-responsibilities.md","slides/scrum-roles/images/product-owner.png","slides/scrum-roles/notes/product-owner.md","slides/scrum-roles/product-owner.js","slides/scrum-roles/images/developers.png","slides/scrum-roles/notes/developers.md","slides/scrum-roles/developers.js","slides/scrum-roles/images/scrum-master.png","slides/scrum-roles/notes/scrum-master.md","slides/scrum-roles/scrum-master.js","slides/scrum-events/images/sprint.png","slides/scrum-events/sprints.js","slides/scrum-events/notes/sprints-intro.md","slides/scrum-events/notes/sprints.md","slides/scrum-events/images/daily-scrum.png","slides/scrum-events/daily-scrum.js","slides/scrum-events/notes/daily-scrum.md","slides/scrum-events/notes/sprint-planning.md","slides/scrum-events/images/backlog-refinement.png","slides/scrum-events/images/sprint-planning.png","slides/scrum-events/sprint-planning.js","slides/scrum-events/sprint-review.js","slides/scrum-events/notes/sprint-review.md","slides/scrum-events/sprint-retrospective.js","slides/scrum-events/notes/sprint-retrospective.md","slides/scrum-artifacts/images/scrum-artifacts.png","slides/scrum-artifacts/artifacts.js","slides/scrum-artifacts/notes/artifacs.md","slides/scrum-artifacts/images/product-backlog.png","slides/scrum-artifacts/images/product-backlog-evolution.png","slides/scrum-artifacts/notes/product-backlog.md","slides/scrum-artifacts/product-backlog.js","slides/scrum-artifacts/images/sprint-backlog.png","slides/scrum-artifacts/sprint-backlog.js","slides/scrum-artifacts/notes/sprint-backlog.md","slides/scrum-artifacts/images/increment.png","slides/scrum-artifacts/increment.js","slides/scrum-artifacts/notes/increment.md","slides/tot-slot/does.js","slides/tot-slot/notes/does.md","slides/tot-slot/donts.js","slides/tot-slot/notes/donts.md","slides/tot-slot/discussion.js","slides/tot-slot/notes/discussion.md","Deck.js","index.js"],"names":["Template","slideNumber","numberOfSlides","justifyContent","position","bottom","width","flexGrow","height","paddingLeft","src","imgLogo","style","opacity","color","paddingRight","fontSize","lineHeight","SpeakerNotes","props","source","allowDangerousHtml","backgroundColor","top","flexDirection","alignItems","imgIterate","image","Fragment","imgTeam","imgScrumWrong","imgScrumTeamRight","imgPO","notes","imgDev","imgSM","imgSprint1","imgDaily","imgRefinement","imgPlanning","imgProductBacklog","notesProductBacklog","imgProductBacklogEvolution","notesProductBacklogEvolution","imgSprintBacklog","imgIncrement","theme","backdropStyle","background","left","colors","primary","secondary","tertiary","bgIntroduction","bgArtifacts","bgEvents","bgRoles","fonts","header","text","fontSizes","h1","App","template","suppressBackdropFallback","Object","values","introduction","map","slide","i","scrumRoles","scrumArtefacts","scrumEvents","totSlot","ReactDOM","render","StrictMode","Deck","document","getElementById"],"mappings":"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","file":"static/js/main.35026aae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cl-logo.573b8e5b.svg\";","import React from 'react';\nimport { Progress, FlexBox, Box, FullScreen, Image } from 'spectacle';\n\nimport imgLogo from './cl-logo.svg';\n\nconst Template = ({ slideNumber, numberOfSlides }) => (\n\n  <FlexBox\n    justifyContent=\"space-between\"\n    position=\"absolute\"\n    bottom=\"0px\"\n    width={1}\n    flexGrow={0}\n    height=\"50px\"\n  >\n    <Box paddingLeft=\"0.5em\">\n      <Image src={imgLogo} style={{ height: '30px', opacity: '0.5' }} />\n    </Box>\n    <Box>\n      <Progress color=\"#1B4D95\" />\n    </Box>\n    <Box paddingRight=\"0.5em\">\n      <FullScreen color=\"#1B4D95\" />\n    </Box>\n  </FlexBox>\n);\n\nexport default Template;","import ReactMarkdown from 'react-markdown';\n\n\nconst style = {\n  fontSize: '1.1rem',\n  lineHeight: '1.3'\n};\n\nconst SpeakerNotes = (props) => (\n  <div style={style}>\n    <ReactMarkdown source={props.source} allowDangerousHtml />\n  </div>\n);\n\nexport default SpeakerNotes;","export default __webpack_public_path__ + \"static/media/iteraties.87449ef0.png\";","import React from 'react';\nimport { Heading, FlexBox, Slide, Notes, Image } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/welcome.md';\n\nimport imgLogo from '../../cl-logo.svg';\nimport imgIterate from './images/iteraties.png';\n\nexport default (\n  <>\n    <Slide backgroundColor=\"#FFF\">\n      <FlexBox\n        justifyContent=\"center\"\n        top=\"0px\"\n        width={1}\n        flexGrow={0}\n        backgroundColor=\"#FFFFFF\"\n        height=\"100px\"\n      >\n        <Image src={imgLogo} style={{ height: '60px'}} />\n      </FlexBox>\n\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n      >\n        <Heading>Scrum</Heading>\n        <Image src={imgIterate} style={{ width: '100%' }}/>\n      </FlexBox>\n\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n  </>\n);","export default \"# Welkom bij deze scrum training\\n\\nBedankt voor jullie aanwezigheid en aandacht.\\n\\nAan het einde van deze training heb je een goed beeld bij Scrum, waarom het zo succesvol is en hoe het werkt, zodat wij dit ook kunnen implementeren.\\n\\nScrum helpt teams helpt met organiseren, itereren, en het voortdurend verbeteren van de producten waar ze aanwerken.\\n\\nHet is geen manangement tool, of vaste methodiek als Prince 2 of ITIL, maar een 'agile' project management framework dat wordt gebruikt om complexe producten te ontwikkelen, leveren en onderhouden.\\n\\nSoftware is een levend, ademend ding. Het is onderheving aan verandering zodat het kan inspelen om de eisen en wensen van de mensen die er mee werken.\\n\\nScrum omarmt verandering en niets staat 100% vast. Dit doen we door grote projecten op te splitsen in kleine behapbare brokken. Daardoor worden projecten en producten beter te managen. Het geeft teams flexibilteit en staat ze toe sneller werk op te leveren met hogere kwaliteit.\\n\\nDoor transparantie en snelle iteraties worden de meeste problemen rondom waterval projecten vermeden en, omdat er vaker wordt opgeleverd is er snel feedback waardoor makkelijk bij gestuurd kan worden.\\n\\nWe beginnen met een globaal overzicht, daarna gaan we de diepete in. We sluiten af met wat hands-on oefeningen verzorgd door Ruben en mijzelf.\";","export default __webpack_public_path__ + \"static/media/pillars-of-scrum.7c42d63f.png\";","import React from 'react';\nimport { Heading, FlexBox, Slide, Notes, Image } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/pillars-of-scrum.md';\n\nimport image from './images/pillars-of-scrum.png';\n\nexport default (\n  <Slide backgroundColor=\"bgIntroduction\">\n    <Heading>Pilaren van Scrum</Heading>\n    <FlexBox>\n      <Image src={image} style={{ width: '90%'}} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Pilaren van Scrum\\nScrum is een emperische aanpak. Daarme word bedoeld wat we werken op babis van feiten, bewijzen en opgedane ervaring.\\nKeuzes zijn niet g\\n\\n## Transparantie\\nDit betekend dat we de feiten laten zien zoals ze zijn. Iedereen die betrokken is bij het product, van klant tot directeur\\nzijn open en tranparant. We vertrouwen elkaar en zijn moedig genoem om zowel goed als selcht nieuws met elkaar te delen.\\nIedereen werkt samen aan het gemeeschappelijke doel en niemand heeft een verborgen agenda.\\n\\n\\n## Toetsing\\nIn dit geval geen evaluatie of functioneringsgesprek maar toesting door iedereen in het Scrum Team.\\nDe toetsing kan gelden voor het product, de mensen, de werk processen, etc., etc.\\n\\nZo wordt bijvoorbeeld  de voortgang open en transparant getoont aan het eind van elke sprint om zo waardevolle feedback te krijgen.\\nAls er wijzigingen nodig zijn klaagt het Scrum Team niet maar past zich aan en gbruikt dit als een kans om het product te verbeteren\\n\\nToesting maakt adaptatie mogelijk. Adapatie zonder toetsing is zinloos.\\n\\n## Adaptatie\\nAdpatatie in deze context betekend continue verbetering. We passen aan op basis van wat we geleerd hebben bij een Toetsing.\\nIedereen zou zich met regelmatig de volgende vraag moeten stellen: *Doen we het beter als gisteren?*\\n\\nWat ***beter*** precies betekent moet een organisatie zelf vast stellen. Voor ons kan dat zijn dat we onze klanten sneller en gerichter bedienen.\\n\\n\\n# Takeaway\\nScrum werkt niet omdat het een drie rollen, vijf Scrum Events, en drie artifacten heeft.\\n\\nScrum works because adheres to the underlying Agile principles of iterative, value-based incremental delivery by frequently gathering customer feedback and embracing change. This results in faster time to market, better delivery predictability, increased customer responsiveness, ability to change direction by managing changing priorities, enhanced software quality, and improved risk management.\";","export default __webpack_public_path__ + \"static/media/scrum-values.3d96cc55.png\";","import React from 'react';\nimport { Heading, FlexBox, Slide, Notes, Image } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/scrum-values.md';\nimport image from './images/scrum-values.png';\n\nexport default (\n  <Slide backgroundColor=\"bgIntroduction\">\n    <Heading>Kernwaarden van Scrum</Heading>\n    <FlexBox>\n      <Image src={image} style={{ width: '90%'}} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Scrum is beaseerd op vijf kernwaarden\\n\\n## Betrokken\\nHet team wordt gestuurd door realistische doelen en een “all-in” teamwork-benadering is verplicht. De doelen zijn realistisch en teruggebracht tot duidelijk definieerbare eenheden, zodat de verantwoordelijkheden duidelijk worden bepaald en de teamleden hun verplichtingen kunnen nakomen.\\n\\n## Focus\\nMet de juiste betrokkenheid en duidelijk gedefinieerde doelen, concentreren de teamleden zich op hun eigen taken, wetende dat ieder van de andere teamleden dat ook doet. Omdat het Scrum proces iteratief is, richten teamleden zich slechts op een paar zeer specifieke doelen tegelijk en worden blokkades snel verwijderd.\\n\\n## Openheid\\nEén van de kritische waarden van Scrum is openheid ofwel transparantie. Het werk van elk teamlid moet beschikbaar zijn voor analyse en suggesties voor verbetering door de anderen. Dit kan een uitdaging zijn voor teamleden die zich bedreigd voelen door samenwerking, dus het is nuttig om dit niet als micromanagen te beschouwen, maar als een waarde die is gebaseerd op de Agile principes van empirisme: Transparantie, Toetsing en Adaptatie. Empirisme beweert dat kennis voortkomt uit datgene wat al bekend is.\\n\\nDit betekend dus dat er een omgeving moet zijn waar in het maken van fouten wordt geaccepteerd als iets wat bij (persoonlijke) ontwikkeling hoort, het is een natuurlijk onderdeel van het leerproces.\\n\\n\\n## Respect\\nEen belangrijk principe van Scrum is respect. Dit gaat verder dan de regel die je misschien van huis uit hebt meegekregen “Ga om met een ander, zoals je ook wilt dat zij met jou omgaan” Leg de verantwoordelijkheid in het team om respectvol met elkaar om te gaan. Ken hierbij elkaars sterke en zwakke punten en zorg dat je als team in balans bent. De teamdoelen worden niet gehaald als er zelfs maar één persoon ondermaats presteert.\\n\\n\\n## Moed\\nWaarom zou “Moed”, eigenlijk klinkt het in het Engels (Courage) beter, specifiek worden genoemd, denk je?\\n\\nScrum gaat in de basis over eerlijk zijn naar iedereen binnen je team. Eerlijkheid, dat kan soms pijn doen. Er is daarom moed voor nodig om op te komen tegen een teamlid, om hem of haar verantwoordelijk te houden. Ook om de “wij hebben het altijd zo gedaan” of “het is niet mijn werk” mentaliteit te overwinnen.\\nScrum gaat over het team vragen wat kunnen we leren en eerlijk naar jezelf toe zijn: deed ik echt het beste wat ik vandaag had kunnen doen?\\nScrum is meer dan een eenvoudige richtlijn voor het volgende project.\\n\\n\\nHet niet omarmen van deze waarden kan op veel manieren een negative impact op het team:\\n- Mensen kunnen niet commiteren omdat ze niet kunnen focussen op de backlog (te veel onderbrekingen bijvoorbeeld)\\n- Het development team wordt afgerekend op het feit dat ze de inmenging van een manager als hindering hebben benoemd.\\n- Indivuen kunnen (of durven) niet open te zijn over situatie die hen belemmerd een Sprintdoel te halen. Bijvoorbeeld een persoonlijke situatie.\\n- Het scrum team krijgt niet het respect dat ze verdienen voor hun werk.\\n- The Scrum Team doesn’t get the respect that they are capable of doing their job.\\n\\nScrum teams moeten (de kans krijgen) om deze waarden volledig te omarmen. Zonder deze waarden is niet mogelijk een goed functionerend team te hebben.\\n\\n\\n[Scrum Agile Group - Scrum Values: Een lesje Scrum waarden](https://agilescrumgroup.nl/scrum-values/)\";","export default __webpack_public_path__ + \"static/media/scrum.b2d3963c.png\";","import React from 'react';\nimport SpeakerNotes from '../../components/Notes';\nimport { FlexBox, Slide, Notes, Image } from 'spectacle';\nimport notes from './notes/scrum-overview.md';\n\nimport image from './images/scrum.png';\n\nexport default (\n  <Slide backgroundColor=\"bgIntroduction\">\n    <FlexBox>\n      <Image src={image} style={{ width: '90%'}} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# In de afbeelding:\\n\\n- Executives, Customers, Users; gezamelijk, Gezamelijk \\\"Stake Holders\\\"\\n- De Product Owner, verzameld de wensen van deze \\\"Stake Holders\\\" en vertaald ze naar \\\"User Stories\\\"\\n- De User Stories worden een \\\"Product Back Log\\\" gezet, een soort to do lijst, waarbij deze Stories zijn gepriotiseerd. De belangrijkste bovenaan de lijst.\\n- Het team maakt een sprint planning op basis van de Back Log. Ze kiezen een aantal Stories (belangrijkste eerst) die in de sprint worden gemaakt.\\n- De gekozen User Stores worden in een \\\"Sprint Back log\\\" gezet. Deze lijst geld alleen voor de huidige sprint.\\n- Het Team geeft toezegging de gekozen stories in de sprint af te ronden. De scope staat dus min of meer vast.\\n- Extra werk kan worden toegevoegd door de Developers in samenspraak met de PO\\n- Aan het begin van de dag is de 'Daily Standup' een kort meeting waarbij de voortgang van de sprint besproken wordt.\\n- Als de sprint teneinde is, moet het gedane werk in productie staan, het team toont vervolgens dat werk in een Sprint Review of Sprint Demo.\\n  Inprincipe kan iedereen die wil hier bij aanwezig zijn.\\n- Vervolgens bespreekt het team de afgelopen sprint in de 'Retrospective'.\\n\";","export default __webpack_public_path__ + \"static/media/scrum-team.c16184f7.png\";","export default __webpack_public_path__ + \"static/media/scrum-team-right.adf7bb98.png\";","export default __webpack_public_path__ + \"static/media/scrum-team-wrong.51dd0596.png\";","import React from 'react';\nimport { Heading, FlexBox, Slide, Notes, Image, Text } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/scrum-team.md';\nimport notesHierarchy from './notes/scrum-team-hierachy.md';\nimport notesResponsibilities from './notes/scrum-team-responsibilities.md';\n\nimport imgTeam from './images/scrum-team.png';\nimport imgScrumTeamRight from './images/scrum-team-right.png';\nimport imgScrumWrong from './images/scrum-team-wrong.png';\n\nexport default (\n  <React.Fragment>\n\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Het Scrum Team</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgTeam} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Team</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgScrumWrong} />\n        <Text>Niet zo</Text>\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notesHierarchy} />\n      </Notes>\n    </Slide>\n\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Team</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgScrumTeamRight} width=\"50%\" />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notesResponsibilities} />\n      </Notes>\n    </Slide>\n\n  </React.Fragment>\n);\n","export default \"# Het Scrum Team\\n\\nHet Scrum Team bestaat uit:\\n- Developers (implementers)\\n- een Product Owner,\\n- een Scrum Master\\n\\nHet team model in Scrum is ontworpen voor optimale flexibiliteit, creativiteit en productiviteit. Scrum teams leveren iteratief en incrementeel producten, waarbij gelegenheden voor feedback gemaximaliseerd worden. Incrementele leveringen het product zorgen ervoor dat er altijd een bruikbaar product is.\\n\\n\";","export default \"# Geen hierarchie binnen het team\\nEr zijn geen 'sub-teams' of hiërarchieen in een Scrum Team. Elk team lid werkt aan het zelfde doel: Producten leveren met de hoogst mogelijke waarde. Het gehele team is daar voor verantwoordelijk. Als er niet geleverd kan worden moet het team dat oplossen, niet individuen binnen het team.\\n\\nOrganisaties die traditioneel erg hierarchisch zijn kunnen moeite hebben met deze aanpak.\";","export default \"Het hele scrum team is gezamelijk verantwoordelijk voor het product\\n\\nScrum Teams zijn zelforganiserend en multidisciplinair. Dat betekend dat het team alle competenties heeft om het werk uit te voeren, zonder het afhankelijk is van anderen. Het team kiest zelf hoe zij het beste hun werk kunnen uitvoeren.\\n**Dat wordt ze niet verteld door iemand van buiten af.**\";","export default __webpack_public_path__ + \"static/media/product-owner.13c267be.png\";","export default \"# De Product Owner\\n\\nZoals de naam al zegt is de Product Owner eigenaar van het product. Hij of zij bepaald namens de stakeholders het uiteindelijke resultaat.\\n\\nDe Product Owner kan de wensen van een comité vertegenwoordigen via de Product Backlog, maar iedereen die een wijziging op de Product Backlog wil moet dat via de Product Owner doen. De Product owner is al enige verantwoordelijk voor de inhoud van de Product Backlog.\\n\\nDe beslissingen van de Product Owner zijn zichtbaar in de Product Backlog.\\n\\nProduct Backlog management omvat o.a.:\\n- Helder omschrijven van Product Backlog items;\\n- Ordenen van Product Backlog items, om doelen en missie op de beste manier te behalen;\\n- Optimaliseren van de waarde van het werk dat de Developers uitvoert;\\n- Ervoor zorgen dat de Product Backlog zichtbaar, transparant en duidelijk is voor iedereen,\\n  en dat het laat zien waar het Scrum Team als volgende aan gaat werken; en\\n- Ervoor zorgen dat de Developers de Product Backlog items begrijpt tot het niveau dat\\n  nodig is.\\n\\nIn de context van een Sprint mag niemand anders werkzaamheden aan de Developers geven. Het is de Developers niet toegestaan te acteren op wensen van iemand anders dan de PO.\\n\\n**Om te kunnen slagen als Product Owner, moet de organisatie zijn / haar beslissingen respecteren. Als de Product Owner wordt 'overruled' komt de backlog en daarmee het hele project in gevaar.**\\n\\n\\n## 5 Kerntaken van een Product Owner:\\n\\n### 1. Vertegenwoordigen van het klantbelang\\nDe Scrum Guide schrijft voor dat de Product Owner altijd één persoon is. Dat kan de klant of de opdrachtgever zélf zijn. Het belangrijkste is dat de belangen van de klant goed zijn vertegenwoordigd. Samenwerking met verschillende stakeholders is daarom erg belangrijk. Het is de verantwoordelijkheid van de Product Owner om in de juiste frequentie contact te onderhouden met elke stakeholder.\\n\\nZo zorgt de Product Owner dat hij of zij aan het Scrum Team kan vertellen wat waarde is.\\n\\n### 2. Samenwerken met de Developers en de Scrum Master\\nHet samenwerken en communiceren met de Developers en de Scrum Master is van groot belang. Als je de Product Owner rol op je neemt, bepaal je namelijk “wat” er moet worden gedaan, maar laat je de Developers volledig vrij in “hoe” dit wordt gerealiseerd.\\n\\nHet wordt niet aanbevolen om als Product Owner óók de rol van Developer op je te nemen. Dit is voor veel Product Owners erg wennen, zeker als deze vroeger zelf projectleider zijn geweest. Een projectleider bepaalt meestal namelijk naast “wat” er moet gebeuren ook “hoe” het gebeurt én wie wat doet.\\n\\nHet is van belang dat zowel de organisatie als de externe stakeholders respecteren dat de Product Owner beslissingen neemt. Door de keuzes bij één persoon te leggen, is er meer focus en zorg je er voor dat “de trein dóór blijft rijden”.  Je verzandt niet in eindeloze discussies over wie wat belangrijk vindt en wat de uiteindelijke vervolgkeuzes zijn.\\n\\n\\n### 3. Beheren van de Product Backlog\\nDe Product Owner prioriteert de Product Backlog en bepaalt de volgorde waarin de Product Backlog Items moeten worden opgepakt. De belangrijkste wensen staan bovenaan, omdat deze de grootste waarde opleveren voor de uiteindelijke gebruikers van het eindproduct.\\n\\nHet beheer van de Product Backlog bestaat niet alleen uit het rangschikken naar prioriteit, ook het duidelijk omschrijven van de items is een belangrijke taak. Een goede omschrijving van de items op de Product Backlog zorgt ervoor dat het Scrum Team ze begrijpt en kan oppakken. Product Backlog items worden vaak geschreven in het “user story” formaat.\\n\\n### 4. Monitoren van de voortgang\\nDe Product Owner is een gedeelte van de tijd bezig met het geven van feedback. In dit opzicht is de ‘review’ meeting aan het einde van een Sprint erg belangrijk voor de Product Owner, omdat daar wordt getoond wat er is gemaakt. Het Scrum Team bepaalt grotendeels samen de invulling van de review meeting. De Product Owner is verantwoordelijk voor het uitnodigen van de belangrijkste stakeholders.\\n\\nTijdens de Review meeting werkt het Scrum Team samen met de stakeholders. Er wordt feedback verzameld op het opgeleverde werk en men kijkt vooruit naar wat er komen gaat.\\n\\nIn deze meeting worden opgeleverde Backlog items goed- of afgekeurd. Op basis van deze “eindafrekening” wordt een Burndown Chart gemaakt. Deze grafiek toont de voortgang en biedt een handvat om te voorspellen wanneer een project in zijn volledigheid kan worden opgeleverd. De feedback die uit de meeting voortkomt, dient ook meteen als input voor de volgende Sprint Planning.\\n\\n### 5. Creëren van een visie (Product Goal) op het eindproduct\\nDe Product Owner houdt zich ook bezig met het creëren van een visie op het eindproduct. Deze visie ligt besloten in de Product Goal. Daarvoor moeten alle ontwikkelingen binnen de markt worden gevolgd. Het leren over – en het observeren en analyseren van – de markt is dus een belangrijk onderdeel van zijn/haar taak.\\n\\nHet is van belang dat de Product Owner weet wat er speelt omdat er verschillende belangen tegen elkaar moeten worden afgewogen. Het is ook aan de Product Owner om belangrijke inzichten met betrekking tot het product te delen met de rest van het Scrum Team. Dit doet de Product Owner in ieder geval in de Sprint Planning.\\n\\nBron: [Product Owner: de 5 belangrijke taken + een handig template](https://agilescrumgroup.nl/product-owner-rol-taken/)\";","import React from 'react';\nimport {\n  Appear,\n  FlexBox,\n  Heading,\n  Image,\n  ListItem,\n  Notes,\n  Slide,\n  Text,\n  UnorderedList,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport imgPO from './images/product-owner.png';\nimport notes from './notes/product-owner.md';\n\nexport default (\n  <React.Fragment>\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Product Owner</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgPO} style={{ width: '90%' }} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n\n\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Product Owner</Heading>\n      <UnorderedList>\n        <ListItem>\n          <Text>Eigenaar van het Product (de website)</Text>\n        </ListItem>\n        <Appear>\n          <ListItem>\n            <Text>Zorgt voor een duidelijke Product Visie</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Beheert de Product Backlog en monitort voortgang</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Vertegenwoordigd de organisatie (klant)</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Werkt samen met de Developers en Scrum Master</Text>\n          </ListItem>\n        </Appear>\n\n      </UnorderedList>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n  </React.Fragment>\n);\n","export default __webpack_public_path__ + \"static/media/developers.2a6b8743.png\";","export default \"# Developers (voorheen Development Team) , wat is het en wie zijn het?\\n\\nIn het Scrum Framework zijn drie rollen/verantwoordelijkheden gedefinieerd: de Scrum Master, de Product Owner en de Developers.\\nDevelopers zijn professionals die tijdens de Sprint samen werken aan het opleveren van (een deel van) het project of het product.\\n\\nDevelopers bepalen zelf hoeveel werk opgenomen wordt vanuit de Product Backlog. Ook bepalen zij zelf hoe ze het werk gaan doen.\\nNet zoals de Product Owner het ‘wat’ bepaalt, bepalen de Developers het ‘hoe’.\\n\\n## Wie doet het werk?\\nStel je voor dat voor een bepaald project juridische kennis nodig is, dan is het niet vanzelfsprekend dat de jurist in het team alle Product Backlog Items (vaak geschreven in de vorm van User Stories) voor haar rekening neemt.\\n\\nHiervoor zijn enkele redenen. Het kan zo zijn dat de persoon met de meeste juridische kennis onverhoopt afwezig is tijdens enkele sprintdagen. Dat ontslaat de rest van het team niet van de verantwoordelijkheid om het item om te zetten in waarde.\\n\\nOok kan het zo zijn dat de jurist aan andere taken werkt en dus geen tijd meer heeft voor dat specifiek juridische item.\\nHet is aan het hele team om na te denken hoe leden met verschillende achtergronden elkaar kunnen helpen en versterken.\\nWat hierbij helpt is items zo in taken te verdelen dat onderdelen van werk gedaan kunnen worden door niet-experts. Een User Story waar bijvoorbeeld een presentatie rondom een juridisch probleem gevraagd wordt, kan opgedeeld worden in specifiek juridisch werk: uitzoeken van wet en regelgeving. Een andere taak, het maken van de presentatie in PowerPoint, kan dan door elk ander teamlid opgepakt worden.\\n\\n[Bron: agilescrumgroup.nl](https://agilescrumgroup.nl/development-team/)\";","import React from 'react';\nimport {\n  Appear,\n  FlexBox,\n  Heading,\n  Image,\n  ListItem,\n  Notes,\n  Slide,\n  Text,\n  UnorderedList,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport imgDev from './images/developers.png';\nimport notes from './notes/developers.md';\n\nexport default (\n  <>\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Developers</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgDev} style={{ width: '90%' }} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Developers</Heading>\n      <UnorderedList>\n        <ListItem>\n          <Text>Bepalen zelf de inhoud van de Sprint, samen met de Product Owner</Text>\n        </ListItem>\n        <Appear>\n          <ListItem>\n            <Text>De Product Owner bepaald \"Wat\", de Developers bepalen \"Hoe\"</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Zijn verantwoordelijk voor het Increment</Text>\n          </ListItem>\n        </Appear>\n      </UnorderedList>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n  </>\n);\n","export default __webpack_public_path__ + \"static/media/scrum-master.9b8c7699.png\";","export default \"# Scrum master\\n\\nTaken:\\n- Leidt mensen op\\n- Faciliteerd het team\\n- Coached team leden\\n- Haalt obstakels weg voor het team\\n\\n\\n## De Scrum Master als docent\\nBeginnende Scrum Teams zijn meestal onbekend met het Agile gedachtegoed. Het behoort tot de Scrum Master taken om hier verandering in te brengen. In het beginstadium inspireer je, doceer je, en breng je eigen ervaringen in. Hierdoor raakt het Scrum Team enthousiast. Het team beseft dat als je slimmer samenwerkt, je betere en snellere resultaten kunt behalen. Als Scrum Master kun je je in deze fase verbazen over hoe vaak je bepaalde gebruiken moet herhalen voordat gedrag ingesleten raakt binnen het team. Dat is niet erg, maar nu eenmaal inherent aan de Scrum Master rol.\\n\\n## De Scrum Master als facilitator\\nDe Scrum Master heeft een belangrijke rol als facilitator. Bij beginnende teams is dit een van de belangrijkste taken. Om meetings goed te laten verlopen is het van belang dat iedereen snapt wat het doel is van een meeting, stel een agenda op en deel die met het team, geef duidelijk weer wat het resultaat zou moeten zijn van de meeting.\\n\\nDe Scrum Master zorgt er voor dat Daily Scrum to the point zijn en niet uitlopen\\n\\n## Coachen als belangrijke taak\\nBeginnende Scrum Masters hebben het vaak druk met het werkend krijgen van het Scrum proces. Daardoor komen zij niet toe aan een andere belangrijke taak van de Scrum Master rol, namelijk coaching. Uiteindelijk is coachen de meest krachtige manier van boodschappen overbrengen.\\nBewhalve het Team zal de Scrum Master ook andere mensen in Scrum Coachen.\\n\\n## Obstakels ruimen is onderdeel van de rol\\nEen goede Scrum Master staat iedere dag op met de vraag: “Wat kan ik doen voor het team om werken voor hen makkelijker te maken?” Het faciliteren van een optimale communicatiestroom is daarin belangrijk. Dit kun je bijvoorbeeld doen door te zorgen dat iedereen uit het team vanuit dezelfde ruimte werkt. Je moet echter goed oppassen in de Scrum Master rol, want je bent niet de assistent van het team. Je schept de randvoorwaarden waaronder teamleden kunnen floreren. Stel jouw team dus in staat zelf op efficiënte wijze problemen op te lossen op.\\n\\n# Wat doet een Scrum Master niet\\n- Tijd, budget en scope in de gaten houden. Dat is een taak van de Product Owner\\n- Rapporteren over voortgang. Dat doet het Scrum Team tijdens Sprint Review\\n- Bepalen wat waneer gedaan moet worden. Dat doen de Developers zelf op basis van de Product Backlog\\n\\nBronnen:\\n[agilescrumgroup.nl](https://agilescrumgroup.nl/scrum-master-taken-rol/)\\n[agilescrumgroup.nl](https://agilescrumgroup.nl/verschil-scrum-master-en-een-projectleider/)\";","import React from 'react';\nimport {\n  Appear,\n  FlexBox,\n  Heading,\n  Image,\n  ListItem,\n  Notes,\n  Slide,\n  Text,\n  UnorderedList,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport imgSM from './images/scrum-master.png';\nimport notes from './notes/scrum-master.md';\n\n\nexport default (\n  <>\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Scrum Master</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgSM} style={{ width: '90%' }} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n    <Slide backgroundColor=\"bgRoles\">\n      <Heading>Scrum Master</Heading>\n      <UnorderedList>\n        <ListItem>\n          <Text>Doceert in Scrum</Text>\n        </ListItem>\n        <Appear>\n          <ListItem>\n            <Text>Faciliteerd Scrum Events</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Coached de mensen</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Ondersteund het team</Text>\n          </ListItem>\n        </Appear>\n      </UnorderedList>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n  </>\n);\n","export default __webpack_public_path__ + \"static/media/sprint.49331948.png\";","import React from 'react';\nimport { FlexBox, Heading, Slide, Image, Appear, Notes, UnorderedList, ListItem, Text } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\n\nimport introNotes from './notes/sprints-intro.md';\nimport notes from './notes/sprints.md';\n\nimport imgSprint1 from './images/sprint.png';\n\nexport default (\n  <>\n    <Slide backgroundColor=\"bgEvents\">\n      <Heading>Sprints</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgSprint1} style={{ width: '90%' }} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={introNotes} />\n      </Notes>\n    </Slide>\n\n    <Slide backgroundColor=\"bgEvents\">\n      <Heading>Sprints</Heading>\n      <UnorderedList>\n        <ListItem>\n          <Text>Alles gebeurd binnen Sprints</Text>\n        </ListItem>\n        <Appear>\n          <ListItem>\n            <Text>Geeft ritme aan gebeurtenissen en werkzaamheden</Text>\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n            <Text>Vaste lengte waarborgd consitentie en voorspelbaarheid</Text>\n          </ListItem>\n        </Appear>\n      </UnorderedList>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n\n    {/* <Slide backgroundColor=\"bgEvents\">\n      <Heading>Sprints</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imagSprint2} style={{ width: '65%' }} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes2} />\n      </Notes>\n    </Slide> */}\n  </>\n);","export default \"# Sprints\\nSprints zorgen er voor dat het veloop van een project beter kan worden voorspeld. Dit doen we doormiddel van inspectie en aanpassing van voortgang richting het eind product tenminste elke maand. Als de horizon te ver ligt wordt werk complexer en kan een sprint doen niet meer van toepassing zijn.\\n\\nKorte sprints zorgen voor snelle iteratie, meer leercycli en beperken risico's en kosten. Elke sprint kan gezien worden als een mini-project waarbij altijd een klein stuk werkende software wordt geleverd.\\n\\nEen sprint kan geannuleerd worden als het sprint doel niet meer geldig is. Alleen een Product Owner mag een sprint annuleren.\";","export default \"# Sprints\\nSprint zijn de hartslag van Scrum, waar ideeen tastbaar worden gemaakt.\\n\\nAlles wat nodig om een Sprintdoel te halen, inclusief Sprint planning, Daily Scrum, Sprint Review, en Retrospective gebeurd binnen de Sprint.\\n\\nSprints geven een cadans aan het project en zorgen voor een vast ritme.\\n\\nEen sprint heeft een vaste lengte om consitentie te waarborgen. Een nieuwe sprint begint direct nadat de oude is gesloten.\\n\\nTijdens de sprint is het belangrijk dat:\\n  - er geen verandering worden gemaakt waarmee het het sprintdoel in gevaar komt\\n  - kwaliteit niet achteruit gaat\\n  - de Product Backlog uitgewerkt is voor zover nodig\\n  - de scope kan worden gewijzigd door het team in overleg met de PO naarmate er meer inzichten zijn\\n\";","export default __webpack_public_path__ + \"static/media/daily-scrum.d5f6214c.png\";","import React from 'react';\nimport SpeakerNotes from '../../components/Notes';\nimport { FlexBox, Heading, Slide, Notes, Image } from 'spectacle';\nimport imgDaily from './images/daily-scrum.png';\nimport notes from './notes/daily-scrum.md';\n// https://agilescrumgroup.nl/wp-content/uploads/Daily-Stand-up.png\n\nexport default (\n  <Slide backgroundColor=\"bgEvents\">\n    <Heading>Daily Scrum</Heading>\n    <FlexBox style={{\n      alignItems: 'flex-start'\n    }}>\n      <Image src={imgDaily} style={{ height: '65%'}} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);","export default \"# Daily Scrum (standup)\\nHet doel van de daily Scrum is Insection (Toetsing) and Adaptation. Het is geen status update.\\n\\n## Het verschil\\n\\n### Wat is een status update?\\nTeam leaden geen een update op hun individuele voortgan van een taak aan iemand anders\\ndie doorgaang een projectplan bijhoud.\\n\\n### Daily Scrum\\nDe Daily Scrum help met 'self organisation' van het team. Dat is het hart van Scrum.\\nDe developers hebben een gedeelde verantwoordelijkheid om aan het eind van de sprint een\\n'Done Increment' te leveren. Ze hebben immers 'Commitment' op 'Sprintdoel' gegeven.\\n\\nOmdat de Developers zelf verantwoordlijk zijn, bepalen zij ook zelf hoe ze het Sprintdoel halen.\\nZij alleen zijn eigenaar van de Sprintbacklog. Door dit event dagelijks te houden en samen\\nde Sprintbacklog aan te passen helpt de Daily Scrum met 'self-organisation'\\nen verantwoordlijkheid van het team.\\n\\nAls de Daily Scrum als een status update wordt behandeld kan het gevoel ontstaan\\ndat de verantwoordelijkheid van het wel of niet halen van een sprint niet bij de\\nDevelopers ligt maar bij die persoon aan wie ze de status update geven.\\n\\n## Inspection en Adapatation\\nHet doel van Scrum is \\\"Done\\\", ofwel (klant) waarde leveren. In context van een\\nSprint is dit voortgang naar het Sprintdoel. Het Team evalueert hun voortgang\\nnaar dat doel. Ze kijken of ze on-track zijn en zo niet wat ze moeten doen om\\non-track te komen, of er iets nodig is om het sprint doel te halen, etc.\\n\\nDe focus ligt niet op de hoeveelheid werk dat is afgerond maar\\nhoe het Sprintdoel wordt behaald en wat daar nog voor nodig is.\\n\\n## Samenwerking\\nOmdat allen developers aanwezig zijn bij de Daily Scrum weten ze vanelkaar wie wat\\ndoet. Ze weten van elkaar hoe ver ze zijn met de taken die ze hebben op gepakt.\\nOmdat dat deze taken besproken worden kunnen ze elkaar mee helpen een taak te voltooien.\\n\\nUitendelijk zijn allen developers verantwoordelijk voor het behalen van de Sprint.\\n\\n\\n## In de praktijk\\nNaast de Developers is in iedergeval een Scrum Master aanwezig.\\n\\n### Activiteiten\\n- Teamleden beantwoorden de 3 daily Scrum vragen (D)\\n  - Wat heb ik gisteren gedaan?\\n  - Wat ga ik vandaag doen?\\n  - Waar heb ik hulp bij nodig / wat hindert mijn voortgang?\\n- Teamleden bieden elkaar hulp aan wanneer mogelijk (D)\\n- Scrum Master noteert grotere obstakels (SM)\\n\\n### Resultaat\\n- Meeting duurt niet langer dan 15 minuten (SM)\\n- Vat follow up punten samen (wie, wat, wanneer) (SM)\\n- Sprint backlog is geüpdate (D)\\n- Lijst met obstakels geüpdate (SM)\\n- Zo nodig zijn extra meetings ingepland (SM)\\n\\n\\n\\n# Bronnen\\nhttps://agilescrumgroup.nl/5-tips-goede-daily-stand-up-meeting/\";","export default \"# Sprint planning\\nDe sprint planning is een meeting waarbij het team met de PO bespreekt welk werk de komende sprint wordt voltooid.\\nDe meeting heeft een vaste lengte, (max. 8 uur bij een sprint lengte van een maand) 4 uur of minder word aangeraden\\nzodat iedereen de aandacht er bij houdt.\\n\\nDe Product Owner zorgt er voor dat de aanwezigen zijn voorbereid om de belangrijkste Stories te bespreken.\\nHet team mag externe mensen uitnodigen om stories te verduidelijken.\\n\\nTijdens de planning worden de volgende onderwerpen besproken:\\n\\n1. Wat is de waarde van deze sprint? <br>\\n  De PO geeft aan welke waarde in deze sprint aan het eind product wordt toegevoegd, het \\\"Increment\\\".\\n  Het hele team steld vervolgens een sprint doel vast. Aan het einde van de planning is het Sprintdoel vastgesteld\\n  en communiceerd het team waarom dit doel waarde opleverd voor de stakeholders\\n\\n2. Wat kunnen we doen in deze sprint? <br>\\n  In overleg met de PO bepalen de ontwikkelaars welke Stories in de sprint worden gedaan.\\n  Als er onduidelijkheden zijn, mogen deze stories verder worden uitgewerkt.\\n\\n3. Hoe gaan we het gekozen werk voltooien? <br>\\n  Per Story wordt bekeken wat er nodig is om de story te implementeren. Dit gebeurd vaak de de story op te knippen in kleine taken\\n  die binnen een dag kunnen worden afgerond. Deze discussie is voor de ontwikkelaars, zij weten het best hoe ze technische\\n  zaken kunnen oplossen.\\n\\n**Alleen developers bepalen hoe een User Story in een Increment wordt omgezet.**\\n\\n\\n\\n## Planning Poker\\nEen goed manier om de sprint in te plannen is Planning Poker.\\nOntwikkelaars schatten in hoe complex een User Story is en geven daar een aantal punten aan.\\nHoe complexer de story hoe meer punten. Na verloop van tijd weet je als team hoeveel punten je\\nin een sprint kan verbranden waardoor het verloop steeds beter te voorspellen wordt.\\n\\nHet is belangrijk om te weten dat we Stories worden ingeschat op complexiteit niet op uren.\\n\\n\\nEen planning sessie zier er als volgt uit:\\n\\n- Pak de backlog er bij die op prioriteit is gesorteerd. De PO kiest de stories welke ingeschat moeten worden.\\n- De PO ligt vervolgens een Story toe. Hij geeft zoveel mogelijk context aan de developers. Het is aan de developers\\n  om zoveel mogelijk vragen te stellen. De Story moet duidelijk zijn. Een Definition of Ready kan helpen.\\n\\n- Laat een van de developers uitleggen wat je met de user story probeert te bereiken.\\n  Lukt dat? Dan is de story helder.\\n\\n- Individueel zonder beïnvloeding van elkaar inschatten\\n  Elke Developer maakt individueel een inschatting zonder elkaar niet beïnvloeden. De schatting wordt\\n  pas kenbaar gemaakt als alle Developers voorzichzelf een schatting hebben gemaakt. Zo zorg je dat afwijkende inzichten niet meteen in de kiem gesmoord worden.\\n\\n  Dit kan met poker kaarten:\\n  Elke developer kiest een nummerkaart en legt deze blind voorzich neer op tafel.\\n  Als alle kaarten op tafel liggen worden ze tegelijk open gelegd.\\n\\n  Wanneer iedereen zijn inschatting heeft gedeeld, worden de meest uiteenlopende inschattingen bekeken.\\n  De betreffende teamleden lichten toe waarom ze het item een bepaalde waarde hebben gegeven.\\n\\n  Als de schattingen niet te ver uit elkaar liggen heeft het geen zin om hier lang over te discussiëren.\\n\\n\";","export default __webpack_public_path__ + \"static/media/backlog-refinement.149e7fcb.png\";","export default __webpack_public_path__ + \"static/media/sprint-planning.8e10f67e.png\";","import React from 'react';\nimport { FlexBox, Heading, Slide, Image, Notes } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/sprint-planning.md';\n\nimport imgRefinement from './images/backlog-refinement.png';\nimport imgPlanning from './images/sprint-planning.png';\n\n\nexport default (\n  <>\n    <Slide backgroundColor=\"bgEvents\">\n      <Heading>Backlog refinement</Heading>\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgRefinement} style={{ width: '80%' }} />\n\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n    <Slide backgroundColor=\"bgEvents\">\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgPlanning} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n  </>\n);\n","import React from 'react';\nimport { Heading, Slide, Appear, Notes, UnorderedList, ListItem, Text } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/sprint-review.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgEvents\">\n    <Heading>Sprint Review</Heading>\n    <UnorderedList>\n      <ListItem>\n        <Text>Increment laten zien</Text>\n      </ListItem>\n      <Appear>\n        <ListItem>\n          <Text>Feedback verzamelen</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Eventueel backlog bijwerken op basis van de feedback</Text>\n        </ListItem>\n      </Appear>\n    </UnorderedList>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Sprint Review\\n\\nEen Sprint Review wordt gehouden aan het einde van de Sprint om het Increment te inspecteren en indien nodig de Product Backlog aan te passen. Gedurende de Sprint Review bekijken het Scrum Team en de belanghebbenden samen wat er bereikt is gedurende de Sprint. Op basis hiervan en op basis van veranderingen in de Product Backlog, werken de aanwezigen samen aan de volgende stappen die genomen kunnen worden om waarde te optimaliseren. Dit is een informele bijeenkomst, geen status meeting, en de presentatie van het Increment heeft als doel feedback te verzamelen en samenwerking te bevorderen.\\n\\nTimeboxed (twee uur). Scrum MAster zorgt er voor dat iedereen zich aan de timebox houdt.\\n\\nDe Sprint Review omvat de volgende elementen:\\n- De aanwezigen zijn het Scrum Team en belangrijke belanghebbenden die worden uitgenodigd door de Product Owner.\\n- De Product Owner identificeert welke Product Backlog items “Klaar” zijn en wat er niet “Klaar” is;\\n- Het Ontwikkelteam bespreekt wat er goed ging gedurende de Sprint, welke problemen ze zijn tegengekomen en hoe deze problemen werden opgelost;\\n- Het Ontwikkelteam demonstreert het werk dat “Klaar” is en beantwoordt vragen met betrekking tot het Increment;\\n- De Product Owner bespreekt de Product Backlog zoals deze nu is. Hij of zij projecteert waarschijnlijke data van completering op basis van de voortgang tot nu toe (als nodig);\\n- De gehele groep werkt samen aan wat er vervolgens gemaakt gaat worden, zodat de Sprint Review waardevolle input levert voor de komende Sprint Planningsbijeenkomst;\\n- Een beoordeling van de markt of potentieel gebruik van het product kan beïnvloeden wat het meest waardevolle is om vervolgens te maken; en,\\n- Een overzicht van de tijdlijn, budget, potentiele mogelijkheden, en markt voor de volgende verwachte ingebruikname van het product.\\n\\nHet resultaat van de Sprint Review is een herziene Product Backlog welke de waarschijnlijke\\nProduct Backlog items voor de volgende Sprint definieert. De Product Backlog kan ook over het\\ngeheel worden aangepast om nieuwe kansen te kunnen omarmen.\";","import React from 'react';\nimport { Heading, Slide, Appear, Notes, UnorderedList, ListItem, Text } from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/sprint-retrospective.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgEvents\">\n    <Heading>Sprint Retrospective</Heading>\n    <UnorderedList>\n      <ListItem>\n        <Text>Inspecteren</Text>\n      </ListItem>\n      <Appear>\n        <ListItem>\n          <Text>verbeteringen identificeren</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>verbeteringen implementeren</Text>\n        </ListItem>\n      </Appear>\n    </UnorderedList>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Sprint Retrospective\\nDe Sprint Retrospective is een kans voor het Scrum Team om zichzelf te inspecteren en een plan\\nte maken om zichzelf gedurende de komende Sprint te verbeteren.\\n\\nDe Sprint Retrospective vindt plaats na de Sprint Review en vóór de volgende Sprint Planning.\\nDit is een drie-uur-timebox bijeenkomst voor Sprints van één maand. Over het algemeen wordt\\nminder tijd gepland voor kortere sprints. De Scrum Master draagt er zorg voor dat de\\ngebeurtenis plaatsvindt en dat de aanwezigen het doel begrijpen. De Scrum Master leert\\niedereen om het binnen de timebox te houden. De Scrum Master neemt deel als een\\ngelijkwaardig teamlid aan de bijeenkomst vanuit zijn verantwoordelijkheid voor het\\nScrum proces\\n\\nHet doel van de Sprint Retrospective is om:\\n- Te inspecteren hoe de laatste Sprint is gegaan met betrekking tot mensen, relaties, processen en tools;\\n- Dingen die goed gingen en potentiële verbeteringen te identificeren en te ordenen;\\n- Een plan te creëren om verbeteringen op de manier waarop het Scrum Team zijn werk doet te implementeren.\\n\\nDe Scrum Master moedigt het Scrum Team aan om, binnen het Scrum proces raamwerk, hun\\nontwikkelproces en practices te verbeteren, om het team effectiever en plezieriger te maken\\nvoor de volgende Sprint. Gedurende elke Sprint Retrospective plant het Scrum Team manieren\\nom de kwaliteit van het product te verhogen door zo nodig de definitie van “Klaar” aan te\\npassen.\\n\\nTegen het einde van de Sprint Retrospective zou het Scrum Team verbeteringen moeten hebben\\nbenoemd die geïmplementeerd zullen worden in de volgende Sprint. Het implementeren van\\ndeze verbeteringen in de volgende Sprint is de aanpassing naar aanleiding van de inspectie van\\nhet Scrum Team zelf. Alhoewel verbeteringen altijd geïmplementeerd mogen worden, biedt de\\nSprint Retrospective een formeel moment gericht op inspectie en aanpassing.\";","export default __webpack_public_path__ + \"static/media/scrum-artifacts.46e090b5.png\";","import React from 'react';\nimport {\n  FlexBox,\n  Heading,\n  Image,\n  Notes,\n  Slide,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport image from './images/scrum-artifacts.png';\nimport notes from './notes/artifacs.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgArtifacts\">\n    <Heading>Artifacts</Heading>\n    <FlexBox\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      flexGrow={0}\n    >\n      <Image src={image} style={{ width: '70%' }} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Wat zijn Scrum Artifacts\\n\\nScrum Artefacten zijn informatie die het Scrum Team en de Stakeholders gebruiken om het Product te beschrijven, voortgang van ontwikkeling bij te houden en welke acties nodig zijn om doelen te behalen. In Scrum kennen we drie hoofd 'artefacten', de Product Backlog, de Sprint backlog en het Increment.\\n\\nDe term Artefact wordt vaak geassocieerd met archeologie (of Role Playing Games), in Scrum betekend de term echter een belangrijk stuk informatie voor het Product dat 'tastbaar' is gemaakt. Ze geven inzicht in het proces en helpen bij het bewaken van uitkomsten.\\n\\nZe zijn belangrijk in omdat ze de drie hoofd principes Transparantie, Toetsing en Adaptie mogelijk maken.\\n\\n\\n## We kennen hoofd 3 Artifacts\\n- De Product Backlog\\n- De Sprint Backlog\\n- Het Increment\\n\\n##  Extra artifacten\\n- Burndown chart\\n- Definition of Done\\n- Definition of Ready\\n\\nDe artifacten helpen in grote maten bij het halen van de afgesproken (Sprint)doelen. Daarom is het belangrijk dat iedereen van het Scrum Team\\ntoegang heeft tot deze artifacten.\\n\\n\\nEen goed voorbeeld hier van een fysiek Sprintback log zichtbaar voor iedereen. (Afbeelding van Sprintbacklog)\\n\\n\\nBron: [Agile scrum artifacts](https://www.atlassian.com/agile/scrum/artifacts)\";","export default __webpack_public_path__ + \"static/media/product-backlog.5206ecf5.png\";","export default __webpack_public_path__ + \"static/media/product-backlog-evolution.bed60daa.png\";","export default \"# Product Backlog\\nDe Product Backlog is een lijst Product onderdelen, die we Product Backlog Items noemen. Ze behelsen de wensen en eisen van de Stakeholders.\\nOm duidelijkheid en structuur aan de PBI's te geven krijgen ze de vorm van een User Story.\\n\\n\\n## DEEP\\n**Detailed**\\nEen goede Product backlog bevat voldoende User Stories om een of twee Sprints te vullen. Deze stories bevatten genoeg informatie voor de Developers om ze te ontwikkelen.\\n\\n**Emergent**\\nontwikkelt zich gaandeweg. Een Product Backlog wordt gaandeweg het project verder (gezamenlijk) ontdekt. We streven dus niet naar een complete Product Backlog voordat we starten met de eerste sprint. Sterker nog, we zien juist de waarde in van een nog niet volledig uitgestippeld plan.\\n\\n**Estimated**\\nOfwel ingeschat. De User Stories die klaa zijn om opgepakt te worden zijn geschat. Er is een redelijk goed beeld hoeveel werk de USer Story behelst.\\n\\n**Prioritized**\\nDe stories boven aan de backlog zijn gesorteerd op prioriteit zodat het team weet wat als eerste ontwikkeld moet worden.\\n\\n\\n# Backlog refinement\\nBacklog refinements zijn niet opgenomen in de  officiële Scrum Guide. Het is echter mijn ervaring dat dit een wel een waardevolle meeting is.\\nVaak gebeurd dit vooraf aan een Sprint Planning. Tjidens een Refinement wordt het volgende gedaan:\\n\\n- Bijwerken van de User Stories naar laatste inzichten\\n- Prioriteren van User Stories\\n- Detailleren en splitten van User Stories\\n- Inschatten van User Stories door de Developers\\n\\n\\n\\n# Valkuilen\\n- Geen ruimte voor technische zaken op de Product backlog\\n- Te veel ruimte voor technische zaken op de Productbacklog. Dit gebeurd vaak als de Developers een luide stem hebben.\\n- De Product backlog is niet vrij beschikbaar en wordt alleen periodiek gedeelt. Het Scrum Team moet altijd de Product backlog in kunnen zien.\\n- Stories worden in Sprint gezet hoewel ze nog niet helemaal duidelijk zijn voor de Developers.\\n\\nBronen\\n- [The product backlog: your ultimate to-do list](https://www.atlassian.com/agile/scrum/backlogs)\\n- https://scrumguide.nl/product-backlog/\\n-\";","import React from 'react';\nimport {\n  FlexBox,\n  Heading,\n  Image,\n  Notes,\n  Slide,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport imgProductBacklog from './images/product-backlog.png';\nimport imgProductBacklogEvolution from './images/product-backlog-evolution.png';\nimport notesProductBacklog from './notes/product-backlog.md';\nimport notesProductBacklogEvolution from './notes/product-backlog.md';\n\nexport default (\n  <>\n    <Slide backgroundColor=\"bgArtifacts\">\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgProductBacklog} style={{ width: '55%'}} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notesProductBacklog} />\n      </Notes>\n    </Slide>\n    <Slide backgroundColor=\"bgArtifacts\">\n      <FlexBox\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        flexGrow={0}\n      >\n        <Image src={imgProductBacklogEvolution} style={{ width: '70%'}} />\n      </FlexBox>\n      <Notes>\n        <SpeakerNotes source={notesProductBacklogEvolution} />\n      </Notes>\n    </Slide>\n\n  </>\n);\n","export default __webpack_public_path__ + \"static/media/sprint-backlog.12323399.png\";","import React from 'react';\nimport {\n  FlexBox,\n  Heading,\n  Image,\n  Notes,\n  Slide,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport imgSprintBacklog from './images/sprint-backlog.png';\nimport notes from './notes/sprint-backlog.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgArtifacts\">\n    <FlexBox\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      flexGrow={0}\n    >\n      <Image src={imgSprintBacklog} style={{width: '65%'}} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Sprint Backlog\\n\\nDe Sprint backlog is een lijst met taken die de Developers moet afronden tijdens deze sprint. De Developers bepalen samen met de PO aan het begin van de Sprint welke User Stories van de Product Backlog op de Sprint Backlog worden gezet.\\n\\nDe Developers zijn eigenaar van de Sprint backlog en niemand anders, zijn bepalen uiteindelijk wat er wel niet op komt.\\n\\nDe Sprint backlog bevat User Stories van de Product Backlog die tijdens Sprint Planning zijn geslecteerd. Maar ook dingen die niet op de Product backlog staan zoals:\\n- Taken die voortvloeien uit een User Story,\\n- Story points voor die individuele taken,\\n- Eventuele uitbreidingen op de DoD als dat nodig voor de specifieke story.\\n- Taken die tijdens sprint zijn toegevoegd als dat nodig om het Sprintdoel te halen\\n\\n\\nOok is met mogelijk dat in samenspraak met de PO stories verwijderd worden als dat nodig om het Sprintdoel te behalen andersom\\nals er tijd over is kunnen extra stories worden toegevoegd.\\n\\n\\n## Geen onzichtbaar werk\\nOver het algemeen bevat de Sprint backlog taken die voortvloeien uit PBI's of taken die nodig zijn om PBI's af te ronden.\\n\\nZo kan het mogelijk zijn dat een User Story \\\"seed database\\\" nodig heeft. Dan kan moet er een taak komen om de database aan te maken. Dit kan zo lang de taak het Sprintgoal niet ingevaar brengt.\\n\\n\\n## Verschil met de Product backlog\\n- De Product backlog is een lijst met alle gewenste functionaliteit van het Product\\n- De Sprint Backlog is een To-Do lijst van PBI's die in de huidige sprint worden afgerond.\\n\\n\\nhttps://pm.stackexchange.com/a/8216\";","export default __webpack_public_path__ + \"static/media/increment.bf9a01a2.png\";","import React from 'react';\nimport {\n  FlexBox,\n  Heading,\n  Image,\n  Notes,\n  Slide,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport imgIncrement from './images/increment.png';\nimport notes from './notes/increment.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgArtifacts\">\n    <Heading>Increment</Heading>\n    <FlexBox\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      flexGrow={0}\n    >\n      <Image src={imgIncrement} style={{width: '40%'}} />\n    </FlexBox>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Increment\\n\\nHet product van een Sprint is het Increment, een concrete stap richting het eind product. Het afgeronde werk van de Developers.\\n\\nElk increment voegt waarde toe, de som van Increments vormen samen het Product. Het heeft immers weinig zin om een sprint lang aan iets te werken wat uiteindelijk geen waarde voor de klant opleverd.\\n\\nElk Increment voldoet aan de Definition of Done.\";","import React from 'react';\nimport SpeakerNotes from '../../components/Notes';\nimport { Slide, Text, Notes, Heading, UnorderedList, ListItem, Appear } from 'spectacle';\nimport notes from './notes/does.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgEvents\">\n    <Heading>Does</Heading>\n    <UnorderedList>\n      <ListItem>\n        <Text>Stel een Sprintdoel vast</Text>\n      </ListItem>\n      <Appear>\n        <ListItem>\n          <Text>Backlog op orde</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Leg besluiten vast</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Beschrijf oplossingen</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Wees transparant</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Maak het duidelijk</Text>\n        </ListItem>\n      </Appear>\n    </UnorderedList>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Do\\n\\n- Zorg er voor dat het team een sprintdoel vaststeld en begrijpt.\\n  Dit bevorderd de samenwerking en zorgt er voor dat iedereen aan\\n  een gemeenschappelijk doel werkt.\\n\\n- De Product backlog moet geprioriteerd zijn, de stories bovenaan zijn duidelijk\\n  en afhandelijkheden opgelost. Als de backlog niet op order is kan dat het\\n  hele project in gevaar brengen.\\n\\n- Als een beslissing is gemaakt, leg deze vast zodat voor iedereen duidelijk is\\n  wat de beslissing inhoudt en wat de motivatie hier achter is. (Denk aan transparantie)\\n  Dit kan bijvoorbeeld in een User Story of Taak\\n\\n- Beschrijf oplossingen in een Product Backlog Item, geen implementatie details.\\n  Wel: Een knop waarmee men kan inloggen\\n  Niet: Niet een oranje knop, 50px uit de rechter bovenhoek waar \\\"Inloggen instaat\\\"\\n\\n  Wel: Pagina's moeten 40% sneller getoond worden.\\n  Niet: Pagina's alleen nog maar client side renderen omdat dat sneller is.\\n\\n- Zorg er voor dat de teamleden, product owner en scrum master goed voor ogen\\n  hebben wat velocity is, en hoe dingen als vakantie, verzuim, onderbrekingen hier\\n  impact op hebben.\\n\\n- Laat werkt waar de afhankelijkheden niet van zijn opgelost uit de sprint.\\n  Zoals designs die niet klaar zijn, contracten die nog niet zijn getekend,\\n  of anderwijs onduidelijkheden.\\n\";","import React from 'react';\nimport {\n  Appear,\n  Heading,\n  ListItem,\n  Notes,\n  Slide,\n  UnorderedList,\n  Text,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\nimport notes from './notes/donts.md';\n\n\nexport default (\n  <Slide backgroundColor=\"bgEvents\">\n    <Heading>Dont's</Heading>\n    <UnorderedList>\n      <ListItem>\n        <Text>Implementatie details in een User Story</Text>\n      </ListItem>\n      <Appear>\n        <ListItem>\n          <Text>Te veel stories in een sprint</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Geen aandacht voor kwaliteit</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Onduidelijke stories in sprint</Text>\n        </ListItem>\n      </Appear>\n      <Appear>\n        <ListItem>\n          <Text>Hoog risico werk</Text>\n        </ListItem>\n      </Appear>\n    </UnorderedList>\n    <Notes>\n      <SpeakerNotes source={notes} />\n    </Notes>\n  </Slide>\n);\n","export default \"# Don'ts\\n\\n- Beschrijf geen implementatie details in een User Story.\\n  Het is aan de developers om te bepalen hoe een User Story in een waardevol Product Increment wordt omgezet.\\n  Zij hebben uiteindelijk de beste kennis om hier over te oordelen.\\n  Scrum staat zgn. SME's (Subject Matter Experts), Onderwerp Experts, toe die op uitnodiging van de Developers advies geven.\\n\\n- Te veel stories in sprint zetten. Je wil het team niet opzetten om te falen.\\n\\n- Te veel focus op alleen nieuwe features leveren. Kwaliteit, technical dept en bugs hebben ook aandacht nodig.\\n  Kwaliteit is vereist voor succes\\n\\n- Onduidelijkheden over wat er in de sprint zit.\\n  Alles stories in de sprint worden begrepen, zijn afgebakend en hebben duidelijke Acceptatie criteria\\n\\n- Neem geen werk met hoog risico aan.\\n  Breek het werk op totdat het risio acceptabel is.\\n  Stel stories uit tot een volgende sprint.\\n  Door risico te beperken wordt de kans op succes groter\";","import React from 'react';\nimport {\n  Appear,\n  FlexBox,\n  Heading,\n  ListItem,\n  Notes,\n  Slide,\n  UnorderedList,\n} from 'spectacle';\nimport SpeakerNotes from '../../components/Notes';\n\nimport notes from './notes/discussion.md';\n\nexport default (\n  <>\n    <Slide backgroundColor=\"bgArtifacts\">\n      <Heading>Discussie punten</Heading>\n      <UnorderedList>\n        <Appear>\n          <ListItem>\n            Twee Product Owners\n          </ListItem>\n        </Appear>\n        <Appear>\n          <ListItem>\n              Onvoorzien werk\n          </ListItem>\n        </Appear>\n      </UnorderedList>\n      <Notes>\n        <SpeakerNotes source={notes} />\n      </Notes>\n    </Slide>\n    <Slide backgroundColor=\"bgArtifacts\">\n      <FlexBox height=\"100vh\">\n        <Heading>Vragen?</Heading>\n      </FlexBox>\n    </Slide>\n  </>\n);\n","export default \"# Vragen en discussie punten\\n\\n1. Scrum schrijft voor dat de Product Owner één persoon is die autoriteit heeft om de back log aan te passen. Echter hebben wij twee specifieke kennis domeinen Markteting en Techniek. Hoe kunnen we hier mee omgaan?\\n\\n2. Hoe kunnen we omgaan met onvoorzien werk, wijziging aanvragen of bugs?\\n\";","import React from 'react';\nimport { Deck } from 'spectacle';\nimport template from './template';\nimport * as introduction from './slides/introduction';\nimport * as scrumRoles from './slides/scrum-roles';\nimport * as scrumEvents from './slides/scrum-events';\nimport * as scrumArtefacts from './slides/scrum-artifacts';\nimport * as totSlot from './slides/tot-slot';\n\n/*\n  bgIntroduction: '#0198CD',\n  bgArtifacts: '#5FC9C3',\n  bgEvents: '#FDC600',\n  bgRoles: '#8CC63F',\n*/\n\nconst theme = {\n  backdropStyle: {\n    background: 'linear-gradient(0deg, rgba(35,99,192,1) 0%, rgba(27,77,149,1) 100%)',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    position: 'fixed'\n  },\n  colors: {\n    primary: '#2363C0',\n    secondary: '#1B4D95',\n    tertiary: '#DCBA00',\n    bgIntroduction: '#FFFFFF',\n    bgArtifacts: '#FFFFFF',\n    bgEvents: '#FFFFFF',\n    bgRoles: '#FFFFFF',\n  },\n  fonts: {\n    header: 'Lora, serif',\n    text: 'Roboto, sans-serif'\n  },\n  fontSizes: {\n    h1: '48px',\n    text: '32px',\n  },\n};\n\nfunction App() {\n  return (\n    <Deck template={template} theme={theme} backdropStyle={theme.backdropStyle} suppressBackdropFallback>\n      {Object.values(introduction).map((slide, i) =>(<React.Fragment key={`1${i}`}>{slide}</React.Fragment>))}\n      {Object.values(scrumRoles).map((slide, i) =>(<React.Fragment key={`2${i}`}>{slide}</React.Fragment>))}\n      {Object.values(scrumArtefacts).map((slide, i) =>(<React.Fragment key={`4${i}`}>{slide}</React.Fragment>))}\n      {Object.values(scrumEvents).map((slide, i) =>(<React.Fragment key={`3${i}`}>{slide}</React.Fragment>))}\n      {Object.values(totSlot).map((slide, i) =>(<React.Fragment key={`3${i}`}>{slide}</React.Fragment>))}\n    </Deck>);\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Deck from './Deck';\nimport './global.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Deck />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}